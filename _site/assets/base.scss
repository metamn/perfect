/* Base.scss
================================================================================

- A collection of snippets, best practices reusable in every project
- It is my personal boilerplate

*/





/* Metrics
--------------------------------------------------------------------------------

- Vertical and horizontal positioning
- This sets the rhythm of the entire page

*/


/* The basic metric for typography and spacing
*/
$pad: 1.25em;



/* The basic metric for positioning. It is the golden ratio
*/
$minor: 38.196%;
$major: 61.804%;
$margin: 5%; /* This varies from project to project */






/* The Grid
--------------------------------------------------------------------------------

- I employ the 'Fit to screen' principle
- Longer pages are divided into slides, each slide fills completely the screen
- Read more at http://its-csongor.com/manifesto/#ch2

- However this works only on desktop; for mobile classic scrolling must be enabled. Or slides 'removed', 'merged'.

*/


@mixin slides {
  /* Set all parents to full height. This will let position elements with % instead of em */
  html, body, .container, #content, section {
    height: 100%;
    
    /* On non desktop displays slides are removed */
    /* If not the background image will scroll together with the content which gives sometimes a very cool effect */
    @include small-screen-and-below {
      @include block;
      height: auto;
    }
  }
  
  html {
    body {
      .container {
        section {
          position: relative;
          background-position: top center;
          background-repeat: no-repeat;
          background-size: cover;
          background-attachment: fixed;
        }
      }
    }
  }
}





/* Colors
--------------------------------------------------------------------------------

- Basic colors to define typographic elements like links and forms
- These can be changed per project.
- However these defaults represent my style
- The basic idea is that pure white and black are not recommended for use, they are too strong

*/


$background: #f9f9f9; /* The basic color in Kuler */
$color: #3A3A3A;
$pink: #FAAFAF;
$highlight: $pink;

$gray-1: #f1f1f1;
$gray-2: #DFDFDF;
$gray-3: #B9B9B9;
$gray-4: #797979;






/* Navigation
--------------------------------------------------------------------------------

- It has a <h3> title to fit the HTML5 Outliner. This is hidden by default
- It always contains a list which can be made displayed inline, or as is
- It can be combined with @mixin menu

*/

@mixin navigation($type: normal) {
  @include block;
  width: auto;
  
  h3, div {
    display: none;
  }
  
  ul {
    li {
      cursor: pointer;
    }
  }
  
  @if $type == inline {
    ul {
      @include list-inline;
      
      li {
        @include button($color, $background);
      }
    }
  }
}


/* Transforms a navigation list into a menu 
  - the navigation must have the '.menu' class to make jQuery work
*/
@mixin menu {
  position: fixed;
  bottom: $minor/2;
  left: $pad;
  z-index: 1;
  
  @include mobile {
    left: $pad/4 !important;
  }
    
  div {
    display: block;
    
    @include circle($pad*2);
    color: $background;
    background: $gray-1;
    cursor: pointer;
    
    span {
      position: relative;
      top: $pad/2;
    }
  }
  
  ul {
    display: none;
  }
  
  /* Toggle menu items visibility */
  &.active {
    ul {
      display: block;
    }
    
    div {
      display: none;
    }
  }
  
}




/* Common elements and mixins
--------------------------------------------------------------------------------
*/

@mixin block {
  width: 100%;
  float: left;
}


@mixin hidden {
  display: none;
}


/* list, inline 
*/
@mixin list-inline {
  display: block;
  margin: 0;
  
  li {
    display: inline-block;
    list-style-type: none;
    margin-left: 0;
    float: left;
    margin-right: $pad;
    
    &.last, &:last-of-type {
      margin-right: 0;
    }
    
    @include small-screen-and-below {
      margin-right: $pad/2;
      margin-bottom: $pad/2;
    }
  }
}



@mixin button($color : $color, $background : $background, $highlight : $highlight) {
  color: $color;
  background: $background;
  
  border: $pad/8 solid;
  @include border-radius($pad);
  padding: $pad/2 $pad*2;
  
  font-weight: 400;
  
  &:hover, &.active {
    background: $highlight;
    @include single-transition(all, 0.25s, ease-in);
  }
  
  @include tablet-and-below {
    padding: $pad/4 $pad;
  }
}


/* Creates a circle */
@mixin circle($size) {
  width: $size;
  height: $size;
  @include border-radius($size);
  
  text-align: center;
}




